<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="34">
  <CheatEntries>
    <CheatEntry>
      <ID>164</ID>
      <Description>"Ghost Info"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>define(address,GameAssembly.dll+EB3230)
define(bytes,40 53 48 83 EC 40)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,GameAssembly.dll+EB3230)

label(code)
label(return)
label(ghostinfo)
registersymbol(ghostinfo)
newmem:

code:
  push rbx
  sub rsp,40
  mov [ghostinfo],rcx
  jmp return
ghostinfo:
dq 0

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // push rbx
  // sub rsp,40

dealloc(newmem)


</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>165</ID>
          <Description>"Name"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:null
1:Spirit
2:Wraith
3:Phantom
4:Poltergeist
5:Banshee
6:Jinn
7:Mare
8:Revenant
9:Shade
10:Demon
11:Yurei
12:Oni
</DropDownList>
          <VariableType>String</VariableType>
          <Length>25</Length>
          <Unicode>1</Unicode>
          <CodePage>0</CodePage>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>ghostinfo</Address>
          <Offsets>
            <Offset>14</Offset>
            <Offset>30</Offset>
            <Offset>38</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>166</ID>
          <Description>"Age"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>ghostinfo</Address>
          <Offsets>
            <Offset>24</Offset>
            <Offset>38</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>167</ID>
          <Description>"Ghost Room"</Description>
          <VariableType>String</VariableType>
          <Length>25</Length>
          <Unicode>1</Unicode>
          <CodePage>0</CodePage>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>ghostinfo</Address>
          <Offsets>
            <Offset>14</Offset>
            <Offset>40</Offset>
            <Offset>58</Offset>
            <Offset>38</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>168</ID>
          <Description>"Ghost Type"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:null
1:Spirit
2:Wraith
3:Phantom
4:Poltergeist
5:Banshee
6:Djinn
7:Nightmare
8:Revenant
9:Shade
10:Demon
11:Yurei
12:Oni
</DropDownList>
          <VariableType>4 Bytes</VariableType>
          <Address>ghostinfo</Address>
          <Offsets>
            <Offset>20</Offset>
            <Offset>38</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>40</ID>
      <Description>"Force Hunt Hook"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(HUNT,GameAssembly.dll,80 B8 90 00 00 00 00 74 4E) // should be unique
alloc(newmem,$1000,HUNT)
alloc(find_huntflag,10)

label(code)
label(return)

find_huntflag:
dd 0

newmem:
mov [find_huntflag],rax
jmp code

code:
  cmp byte ptr [rax+00000090],00
  jmp return

HUNT:
  jmp newmem
  nop 2
return:
registersymbol(HUNT find_huntflag)

[DISABLE]

HUNT:
  db 80 B8 90 00 00 00 00

unregistersymbol(HUNT find_huntflag)
dealloc(newmem)
dealloc(find_huntflag)
{
// ORIGINAL CODE - INJECTION POINT: GameAssembly.dll+18C3C08

GameAssembly.dll+18C3BE5: 84 C0                 - test al,al
GameAssembly.dll+18C3BE7: 75 76                 - jne GameAssembly.dll+18C3C5F
GameAssembly.dll+18C3BE9: 48 8B 05 50 0F 06 01  - mov rax,[GameAssembly.dll+2924B40]
GameAssembly.dll+18C3BF0: 48 8B 88 B8 00 00 00  - mov rcx,[rax+000000B8]
GameAssembly.dll+18C3BF7: 48 8B 01              - mov rax,[rcx]
GameAssembly.dll+18C3BFA: 48 85 C0              - test rax,rax
GameAssembly.dll+18C3BFD: 74 6B                 - je GameAssembly.dll+18C3C6A
GameAssembly.dll+18C3BFF: 48 8B 40 30           - mov rax,[rax+30]
GameAssembly.dll+18C3C03: 48 85 C0              - test rax,rax
GameAssembly.dll+18C3C06: 74 62                 - je GameAssembly.dll+18C3C6A
// ---------- INJECTING HERE ----------
GameAssembly.dll+18C3C08: 80 B8 90 00 00 00 00  - cmp byte ptr [rax+00000090],00
// ---------- DONE INJECTING  ----------
GameAssembly.dll+18C3C0F: 74 4E                 - je GameAssembly.dll+18C3C5F
GameAssembly.dll+18C3C11: 0F 29 74 24 20        - movaps [rsp+20],xmm6
GameAssembly.dll+18C3C16: 33 C9                 - xor ecx,ecx
GameAssembly.dll+18C3C18: F3 0F 10 73 64        - movss xmm6,[rbx+64]
GameAssembly.dll+18C3C1D: E8 3E 00 06 FF        - call GameAssembly.dll+923C60
GameAssembly.dll+18C3C22: F3 0F 5C F0           - subss xmm6,xmm0
GameAssembly.dll+18C3C26: 0F 57 C0              - xorps xmm0,xmm0
GameAssembly.dll+18C3C29: F3 0F 11 73 64        - movss [rbx+64],xmm6
GameAssembly.dll+18C3C2E: 0F 2F C6              - comiss xmm0,xmm6
GameAssembly.dll+18C3C31: 0F 28 74 24 20        - movaps xmm6,[rsp+20]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>41</ID>
          <Description>"Force Hunt (3 on, 4 off)"</Description>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>find_huntflag</Address>
          <Offsets>
            <Offset>90</Offset>
          </Offsets>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>51</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
              <ActivateSound>Activate</ActivateSound>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>52</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
              <ActivateSound>Deactivate</ActivateSound>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>178</ID>
      <Description>"Force Ghost Appearance"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(showghost,GameAssembly.dll,80 BB 90 00 00 00 00 0F 84 8C 00 00 00 F3) // should be unique
alloc(newmem,$1000,"GameAssembly.dll"+EB32A6)

label(code)
label(return)

newmem:

code:
  cmp byte ptr [rbx+00000090],01
  jmp return

showghost:
  jmp newmem
  nop 2
return:
registersymbol(showghost)

[DISABLE]

showghost:
  db 80 BB 90 00 00 00 00

unregistersymbol(showghost)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "GameAssembly.dll"+D9FCE6

"GameAssembly.dll"+D9FCBD: 74 27                    -  je GameAssembly.dll+D9FCE6
"GameAssembly.dll"+D9FCBF: 48 8B 05 4A 03 A5 01     -  mov rax,[GameAssembly.dll+27F0010]
"GameAssembly.dll"+D9FCC6: 48 8B 90 B8 00 00 00     -  mov rdx,[rax+000000B8]
"GameAssembly.dll"+D9FCCD: 48 8B 02                 -  mov rax,[rdx]
"GameAssembly.dll"+D9FCD0: 48 85 C0                 -  test rax,rax
"GameAssembly.dll"+D9FCD3: 0F 84 B6 02 00 00        -  je GameAssembly.dll+D9FF8F
"GameAssembly.dll"+D9FCD9: 80 78 69 00              -  cmp byte ptr [rax+69],00
"GameAssembly.dll"+D9FCDD: 75 07                    -  jne GameAssembly.dll+D9FCE6
"GameAssembly.dll"+D9FCDF: 33 D2                    -  xor edx,edx
"GameAssembly.dll"+D9FCE1: E8 3A 2B 9F 00           -  call GameAssembly.dll+1792820
// ---------- INJECTING HERE ----------
"GameAssembly.dll"+D9FCE6: 80 BB 90 00 00 00 00     -  cmp byte ptr [rbx+00000090],00
// ---------- DONE INJECTING  ----------
"GameAssembly.dll"+D9FCED: 0F 84 F6 00 00 00        -  je GameAssembly.dll+D9FDE9
"GameAssembly.dll"+D9FCF3: F3 0F 10 B3 8C 00 00 00  -  movss xmm6,[rbx+0000008C]
"GameAssembly.dll"+D9FCFB: 33 C9                    -  xor ecx,ecx
"GameAssembly.dll"+D9FCFD: E8 1E 8C 7D 00           -  call GameAssembly.dll+1578920
"GameAssembly.dll"+D9FD02: F3 0F 5C F0              -  subss xmm6,xmm0
"GameAssembly.dll"+D9FD06: 0F 57 C0                 -  xorps xmm0,xmm0
"GameAssembly.dll"+D9FD09: 0F 2F C6                 -  comiss xmm0,xmm6
"GameAssembly.dll"+D9FD0C: F3 0F 11 B3 8C 00 00 00  -  movss [rbx+0000008C],xmm6
"GameAssembly.dll"+D9FD14: 0F 86 CF 00 00 00        -  jbe GameAssembly.dll+D9FDE9
"GameAssembly.dll"+D9FD1A: F3 0F 10 35 AE FE 20 01  -  movss xmm6,[GameAssembly.dll+1FAFBD0]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>37</ID>
      <Description>"Sanity Hook"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(SANITY,GameAssembly.dll,F3 0F 10 B3 38 01 00 00 48 8B 88 B8 00 00 00 48 8B 01 48 85 C0 0F 84 90) // should be unique
alloc(newmem,$1000,SANITY)
alloc(find_sanity,10)

label(code)
label(return)

find_sanity:
dd 0

newmem:
mov [find_sanity],rbx
jmp code

code:
  movss xmm6,[rbx+00000138]
  jmp return

SANITY:
  jmp newmem
  nop 3
return:
registersymbol(SANITY find_sanity)

[DISABLE]

SANITY:
  db F3 0F 10 B3 38 01 00 00

unregistersymbol(SANITY find_sanity)
dealloc(newmem)
dealloc(find_sanity)
{
// ORIGINAL CODE - INJECTION POINT: GameAssembly.dll+D060DF

GameAssembly.dll+D060A8: 80 78 20 00              - cmp byte ptr [rax+20],00
GameAssembly.dll+D060AC: 74 0A                    - je GameAssembly.dll+D060B8
GameAssembly.dll+D060AE: F3 0F 10 8B 5C 01 00 00  - movss xmm1,[rbx+0000015C]
GameAssembly.dll+D060B6: EB 08                    - jmp GameAssembly.dll+D060C0
GameAssembly.dll+D060B8: F3 0F 10 8B 58 01 00 00  - movss xmm1,[rbx+00000158]
GameAssembly.dll+D060C0: F3 0F 59 8B 54 01 00 00  - mulss xmm1,[rbx+00000154]
GameAssembly.dll+D060C8: F3 0F 59 C8              - mulss xmm1,xmm0
GameAssembly.dll+D060CC: F3 0F 58 CE              - addss xmm1,xmm6
GameAssembly.dll+D060D0: F3 0F 11 8B 38 01 00 00  - movss [rbx+00000138],xmm1
GameAssembly.dll+D060D8: 48 8B 05 B1 E6 C1 01     - mov rax,[GameAssembly.dll+2924790]
// ---------- INJECTING HERE ----------
GameAssembly.dll+D060DF: F3 0F 10 B3 38 01 00 00  - movss xmm6,[rbx+00000138]
// ---------- DONE INJECTING  ----------
GameAssembly.dll+D060E7: 48 8B 88 B8 00 00 00     - mov rcx,[rax+000000B8]
GameAssembly.dll+D060EE: 48 8B 01                 - mov rax,[rcx]
GameAssembly.dll+D060F1: 48 85 C0                 - test rax,rax
GameAssembly.dll+D060F4: 0F 84 90 02 00 00        - je GameAssembly.dll+D0638A
GameAssembly.dll+D060FA: 80 78 20 00              - cmp byte ptr [rax+20],00
GameAssembly.dll+D060FE: B9 64 00 00 00           - mov ecx,00000064
GameAssembly.dll+D06103: BF 32 00 00 00           - mov edi,00000032
GameAssembly.dll+D06108: 0F 44 F9                 - cmove edi,ecx
GameAssembly.dll+D0610B: 48 8B 0D FE 0A C3 01     - mov rcx,[GameAssembly.dll+2936C10]
GameAssembly.dll+D06112: F6 81 2F 01 00 00 02     - test byte ptr [rcx+0000012F],02
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>38</ID>
          <Description>"Insanity Level"</Description>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>find_sanity</Address>
          <Offsets>
            <Offset>138</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Super Sprint (3x Speed)"</Description>
      <LastState/>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Phasmophobia.exe
  Version: 
  Date   : 2020-11-04
  Author : C130s

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(speedsprint,GameAssembly.dll,F3 44 0F 10 4F 20 F3 0F) // should be unique
alloc(newmem,$100,"GameAssembly.dll"+1416CE0)


label(code)
label(return)


newmem:
push ebx
mov ebx,(float)4.8
movd xmm9,ebx
pop ebx
  jmp return

code:
  movss xmm9,[rdi+20]
  jmp return

speedsprint:
  jmp newmem
  nop
return:
registersymbol(speedsprint)

[DISABLE]

speedsprint:
  db F3 44 0F 10 4F 20

unregistersymbol(speedsprint)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "GameAssembly.dll"+1416CE0

"GameAssembly.dll"+1416CBB: 48 89 45 A0                 -  mov [rbp-60],rax
"GameAssembly.dll"+1416CBF: 89 45 A8                    -  mov [rbp-58],eax
"GameAssembly.dll"+1416CC2: 48 89 44 24 50              -  mov [rsp+50],rax
"GameAssembly.dll"+1416CC7: 89 44 24 58                 -  mov [rsp+58],eax
"GameAssembly.dll"+1416CCB: 48 89 44 24 40              -  mov [rsp+40],rax
"GameAssembly.dll"+1416CD0: 89 44 24 48                 -  mov [rsp+48],eax
"GameAssembly.dll"+1416CD4: 84 DB                       -  test bl,bl
"GameAssembly.dll"+1416CD6: 74 08                       -  je GameAssembly.dll+1416CE0
"GameAssembly.dll"+1416CD8: F3 44 0F 10 4F 1C           -  movss xmm9,[rdi+1C]
"GameAssembly.dll"+1416CDE: EB 06                       -  jmp GameAssembly.dll+1416CE6
// ---------- INJECTING HERE ----------
"GameAssembly.dll"+1416CE0: F3 44 0F 10 4F 20           -  movss xmm9,[rdi+20]
// ---------- DONE INJECTING  ----------
"GameAssembly.dll"+1416CE6: F3 0F 10 97 C4 00 00 00     -  movss xmm2,[rdi+000000C4]
"GameAssembly.dll"+1416CEE: 48 8D 4D 40                 -  lea rcx,[rbp+40]
"GameAssembly.dll"+1416CF2: F3 0F 10 8F C0 00 00 00     -  movss xmm1,[rdi+000000C0]
"GameAssembly.dll"+1416CFA: 45 33 C9                    -  xor r9d,r9d
"GameAssembly.dll"+1416CFD: 48 89 45 40                 -  mov [rbp+40],rax
"GameAssembly.dll"+1416D01: E8 BA 42 26 00              -  call GameAssembly.dll+167AFC0
"GameAssembly.dll"+1416D06: F3 0F 10 45 40              -  movss xmm0,[rbp+40]
"GameAssembly.dll"+1416D0B: 48 8D B7 80 00 00 00        -  lea rsi,[rdi+00000080]
"GameAssembly.dll"+1416D12: F3 0F 10 4D 44              -  movss xmm1,[rbp+44]
"GameAssembly.dll"+1416D17: 48 8B CE                    -  mov rcx,rsi
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys/>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Faster Walk (normal sprint speed)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Phasmophobia.exe
  Version: 
  Date   : 2020-11-04
  Author : C130s

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(speedwalk,GameAssembly.dll,F3 44 0F 10 4F 1C EB) // should be unique
alloc(newmem,$100,"GameAssembly.dll"+1416CD8)

label(code)
label(return)

newmem:
push rax
mov rax,(float)1.6
movd xmm9,rax
pop rax
jmp return

code:
  movss xmm9,[rdi+1C]
  jmp return

speedwalk:
  jmp newmem
  nop
return:
registersymbol(speedwalk)

[DISABLE]

speedwalk:
  db F3 44 0F 10 4F 1C

unregistersymbol(speedwalk)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "GameAssembly.dll"+1416CD8

"GameAssembly.dll"+1416CB3: 48 89 45 90                 -  mov [rbp-70],rax
"GameAssembly.dll"+1416CB7: 48 89 45 98                 -  mov [rbp-68],rax
"GameAssembly.dll"+1416CBB: 48 89 45 A0                 -  mov [rbp-60],rax
"GameAssembly.dll"+1416CBF: 89 45 A8                    -  mov [rbp-58],eax
"GameAssembly.dll"+1416CC2: 48 89 44 24 50              -  mov [rsp+50],rax
"GameAssembly.dll"+1416CC7: 89 44 24 58                 -  mov [rsp+58],eax
"GameAssembly.dll"+1416CCB: 48 89 44 24 40              -  mov [rsp+40],rax
"GameAssembly.dll"+1416CD0: 89 44 24 48                 -  mov [rsp+48],eax
"GameAssembly.dll"+1416CD4: 84 DB                       -  test bl,bl
"GameAssembly.dll"+1416CD6: 74 08                       -  je GameAssembly.dll+1416CE0
// ---------- INJECTING HERE ----------
"GameAssembly.dll"+1416CD8: F3 44 0F 10 4F 1C           -  movss xmm9,[rdi+1C]
// ---------- DONE INJECTING  ----------
"GameAssembly.dll"+1416CDE: EB 06                       -  jmp GameAssembly.dll+1416CE6
"GameAssembly.dll"+1416CE0: F3 44 0F 10 4F 20           -  movss xmm9,[rdi+20]
"GameAssembly.dll"+1416CE6: F3 0F 10 97 C4 00 00 00     -  movss xmm2,[rdi+000000C4]
"GameAssembly.dll"+1416CEE: 48 8D 4D 40                 -  lea rcx,[rbp+40]
"GameAssembly.dll"+1416CF2: F3 0F 10 8F C0 00 00 00     -  movss xmm1,[rdi+000000C0]
"GameAssembly.dll"+1416CFA: 45 33 C9                    -  xor r9d,r9d
"GameAssembly.dll"+1416CFD: 48 89 45 40                 -  mov [rbp+40],rax
"GameAssembly.dll"+1416D01: E8 BA 42 26 00              -  call GameAssembly.dll+167AFC0
"GameAssembly.dll"+1416D06: F3 0F 10 45 40              -  movss xmm0,[rbp+40]
"GameAssembly.dll"+1416D0B: 48 8D B7 80 00 00 00        -  lea rsi,[rdi+00000080]
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys/>
          <ID>0</ID>
          <ActivateSound>Activate</ActivateSound>
          <DeactivateSound>Deactivate</DeactivateSound>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>22</ID>
      <Description>"Player Coordinates Hook"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(COORDS,UnityPlayer.dll,F2 0F 10 30 F2 0F 10 78 08) // should be unique
alloc(newmem,$1000,COORDS)
alloc(find_coords,10)
alloc(storecoords,256)

label(code)
label(return)
label(save)
label(load)
label(xpos)
label(ypos)
label(zpos)
label(enable_save)
label(enable_load)

find_coords:
dd 0
storecoords:
xpos:
dd 0
ypos:
dd 0
zpos:
dd 0
enable_save:
dd 0
enable_load:
dd 0

newmem:
mov [find_coords],rax
cmp [enable_save],1
je save
cmp [enable_load],1
je load
jmp code

save:
mov [enable_save],0
push rbx
mov rbx,[rax+14]
mov [xpos],rbx
mov rbx,[rax+0C]
mov [ypos],rbx
mov rbx,[rax+4]
mov [zpos],rbx
pop rbx
jmp code

load:
mov [enable_load],0
push rbx
mov rbx,[xpos]
mov [rax+14],rbx
mov rbx,[ypos]
mov [rax+0C],rbx
mov rbx,[zpos]
mov [rax+4],rbx
pop rbx
jmp code

code:
  movsd xmm6,[rax]
  movsd xmm7,[rax+08]
  jmp return

COORDS:
  jmp newmem
  nop 4
return:
registersymbol(COORDS find_coords xpos ypos zpos enable_save enable_load)

[DISABLE]

COORDS:
  db F2 0F 10 30 F2 0F 10 78 08

unregistersymbol(COORDS find_coords xpos ypos zpos enable_save enable_load)
dealloc(newmem)
dealloc(find_coords)
dealloc(storecoords)
{
// ORIGINAL CODE - INJECTION POINT: UnityPlayer.dll+846CBD

UnityPlayer.dll+846C95: E8 A6 E8 FE FF     - call UnityPlayer.dll+835540
UnityPlayer.dll+846C9A: 48 8B C8           - mov rcx,rax
UnityPlayer.dll+846C9D: E8 AE 14 FF FF     - call UnityPlayer.dll+838150
UnityPlayer.dll+846CA2: E8 99 E8 FE FF     - call UnityPlayer.dll+835540
UnityPlayer.dll+846CA7: 48 8B C8           - mov rcx,rax
UnityPlayer.dll+846CAA: E8 01 CA FE FF     - call UnityPlayer.dll+8336B0
UnityPlayer.dll+846CAF: 49 8B 4D 70        - mov rcx,[r13+70]
UnityPlayer.dll+846CB3: 48 8B 01           - mov rax,[rcx]
UnityPlayer.dll+846CB6: FF 50 20           - call qword ptr [rax+20]
UnityPlayer.dll+846CB9: 49 8B 4D 70        - mov rcx,[r13+70]
// ---------- INJECTING HERE ----------
UnityPlayer.dll+846CBD: F2 0F 10 30        - movsd xmm6,[rax]
// ---------- DONE INJECTING  ----------
UnityPlayer.dll+846CC1: F2 0F 10 78 08     - movsd xmm7,[rax+08]
UnityPlayer.dll+846CC6: F2 44 0F 10 40 10  - movsd xmm8,[rax+10]
UnityPlayer.dll+846CCC: 48 8B 01           - mov rax,[rcx]
UnityPlayer.dll+846CCF: 66 0F 5A F6        - cvtpd2ps xmm6,xmm6
UnityPlayer.dll+846CD3: 66 0F 5A FF        - cvtpd2ps xmm7,xmm7
UnityPlayer.dll+846CD7: 66 45 0F 5A C0     - cvtpd2ps xmm8,xmm8
UnityPlayer.dll+846CDC: FF 90 90 00 00 00  - call qword ptr [rax+00000090]
UnityPlayer.dll+846CE2: 49 8B 4D 48        - mov rcx,[r13+48]
UnityPlayer.dll+846CE6: 48 8D 55 20        - lea rdx,[rbp+20]
UnityPlayer.dll+846CEA: 48 8B 01           - mov rax,[rcx]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>27</ID>
          <Description>"Xpos"</Description>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>find_coords</Address>
          <Offsets>
            <Offset>14</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>23</ID>
          <Description>"Ypos"</Description>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>find_coords</Address>
          <Offsets>
            <Offset>c</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>26</ID>
          <Description>"Zpos"</Description>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>find_coords</Address>
          <Offsets>
            <Offset>4</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>28</ID>
          <Description>"Save Coordinates (1)"</Description>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>enable_save</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>49</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
              <ActivateSound>Activate</ActivateSound>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>29</ID>
          <Description>"Load Coordinates (2)"</Description>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>enable_load</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>50</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
              <ActivateSound>Activate</ActivateSound>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>5</ID>
      <Description>"Money &amp; EXP Hook"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(moneyexp,GameAssembly.dll,00 02 00 00 8B 40 18 48 8D 54 24 50) // should be unique
alloc(newmem,$1000,"GameAssembly.dll"+2821C3)
alloc(find_money,10)
alloc(find_exp,10)

label(code)
label(return)
label(exp)

find_money:
dd 0
find_exp:
dd 0

newmem:
cmp [rax+A4],0
je exp
mov [find_money],rax
jmp code

exp:
mov [find_exp],rax
jmp code

code:
  mov eax,[rax+18]
  lea rdx,[rsp+50]
  jmp return

moneyexp+04:
  jmp newmem
  nop 3
return:
registersymbol(moneyexp find_money find_exp)

[DISABLE]

moneyexp+04:
  db 8B 40 18 48 8D 54 24 50

unregistersymbol(moneyexp find_money find_exp)
dealloc(newmem)
dealloc(find_money)
dealloc(find_exp)

{
// ORIGINAL CODE - INJECTION POINT: "GameAssembly.dll"+2821C3

"GameAssembly.dll"+282199: 48 85 C9              -  test rcx,rcx
"GameAssembly.dll"+28219C: 75 A8                 -  jne GameAssembly.dll+282146
"GameAssembly.dll"+28219E: E9 EA 01 00 00        -  jmp GameAssembly.dll+28238D
"GameAssembly.dll"+2821A3: 48 85 C9              -  test rcx,rcx
"GameAssembly.dll"+2821A6: 0F 84 17 02 00 00     -  je GameAssembly.dll+2823C3
"GameAssembly.dll"+2821AC: 3B 79 18              -  cmp edi,[rcx+18]
"GameAssembly.dll"+2821AF: 0F 83 FE 01 00 00     -  jae GameAssembly.dll+2823B3
"GameAssembly.dll"+2821B5: 48 8B 44 F1 20        -  mov rax,[rcx+rsi*8+20]
"GameAssembly.dll"+2821BA: 48 85 C0              -  test rax,rax
"GameAssembly.dll"+2821BD: 0F 84 00 02 00 00     -  je GameAssembly.dll+2823C3
// ---------- INJECTING HERE ----------
"GameAssembly.dll"+2821C3: 8B 40 18              -  mov eax,[rax+18]
"GameAssembly.dll"+2821C6: 48 8D 54 24 50        -  lea rdx,[rsp+50]
// ---------- DONE INJECTING  ----------
"GameAssembly.dll"+2821CB: 48 8B 0D 86 2E 59 02  -  mov rcx,[GameAssembly.dll+2815058]
"GameAssembly.dll"+2821D2: 89 44 24 50           -  mov [rsp+50],eax
"GameAssembly.dll"+2821D6: E8 55 3A DC FF        -  call GameAssembly.dll+45C30
"GameAssembly.dll"+2821DB: E9 94 01 00 00        -  jmp GameAssembly.dll+282374
"GameAssembly.dll"+2821E0: 48 8B 05 71 09 59 02  -  mov rax,[GameAssembly.dll+2812B58]
"GameAssembly.dll"+2821E7: 48 8B CB              -  mov rcx,rbx
"GameAssembly.dll"+2821EA: 49 39 06              -  cmp [r14],rax
"GameAssembly.dll"+2821ED: 49 0F 44 CE           -  cmove rcx,r14
"GameAssembly.dll"+2821F1: 48 85 C9              -  test rcx,rcx
"GameAssembly.dll"+2821F4: 0F 84 B4 00 00 00     -  je GameAssembly.dll+2822AE
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>6</ID>
          <Description>"Money"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>find_money</Address>
          <Offsets>
            <Offset>18</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"EXP"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>find_exp</Address>
          <Offsets>
            <Offset>18</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>12</ID>
      <Description>"Infinite Salt"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(SALT,GameAssembly.dll,CC CC CC CC CC CC CC CC 40 57 48 83 EC 20 FF 49 50) // should be unique
alloc(newmem,$1000,"GameAssembly.dll"+10B48E2)

label(code)
label(return)

newmem:

code:
  sub rsp,20
  mov [rcx+50],#99
  dec [rcx+50]
  jmp return

SALT+0A:
  jmp newmem
  nop 2
return:
registersymbol(SALT)

[DISABLE]

SALT+0A:
  db 48 83 EC 20 FF 49 50

unregistersymbol(SALT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "GameAssembly.dll"+10B48E2

"GameAssembly.dll"+10B48D7: CC                    -  int 3 
"GameAssembly.dll"+10B48D8: CC                    -  int 3 
"GameAssembly.dll"+10B48D9: CC                    -  int 3 
"GameAssembly.dll"+10B48DA: CC                    -  int 3 
"GameAssembly.dll"+10B48DB: CC                    -  int 3 
"GameAssembly.dll"+10B48DC: CC                    -  int 3 
"GameAssembly.dll"+10B48DD: CC                    -  int 3 
"GameAssembly.dll"+10B48DE: CC                    -  int 3 
"GameAssembly.dll"+10B48DF: CC                    -  int 3 
"GameAssembly.dll"+10B48E0: 40 57                 -  push rdi
// ---------- INJECTING HERE ----------
"GameAssembly.dll"+10B48E2: 48 83 EC 20           -  sub rsp,20
"GameAssembly.dll"+10B48E6: FF 49 50              -  dec [rcx+50]
// ---------- DONE INJECTING  ----------
"GameAssembly.dll"+10B48E9: 48 8B F9              -  mov rdi,rcx
"GameAssembly.dll"+10B48EC: 48 8B 49 28           -  mov rcx,[rcx+28]
"GameAssembly.dll"+10B48F0: 48 85 C9              -  test rcx,rcx
"GameAssembly.dll"+10B48F3: 0F 84 8D 00 00 00     -  je GameAssembly.dll+10B4986
"GameAssembly.dll"+10B48F9: 33 D2                 -  xor edx,edx
"GameAssembly.dll"+10B48FB: 48 89 5C 24 30        -  mov [rsp+30],rbx
"GameAssembly.dll"+10B4900: E8 1B FA A3 FF        -  call GameAssembly.dll+AF4320
"GameAssembly.dll"+10B4905: 80 3D 2E 15 86 01 00  -  cmp byte ptr [GameAssembly.dll+2915E3A],00
"GameAssembly.dll"+10B490C: 75 12                 -  jne GameAssembly.dll+10B4920
"GameAssembly.dll"+10B490E: 8B 0D E0 00 11 01     -  mov ecx,[GameAssembly.dll+21C49F4]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>140</ID>
      <Description>"Super Glowstick (holding)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Phasmophobia.exe
  Version: 
  Date   : 2020-11-04
  Author : C130s

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(glow1,GameAssembly.dll,F3 0F 10 0D 9C A9 79 00) // should be unique
alloc(newmem,$1000,glow1)

label(code)
label(return)

newmem:
push rbx
mov rbx,(float)25.0
movd xmm1,rbx
pop rbx
jmp return

code:
  movss xmm1,[GameAssembly.dll+20A6690]
  jmp return

glow1:
  jmp newmem
  nop 3
return:
registersymbol(glow1)

[DISABLE]

glow1:
  db F3 0F 10 0D 9C A9 79 00

unregistersymbol(glow1)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: GameAssembly.dll+190BCEC

GameAssembly.dll+190BCDA: CC                       - int 3 
GameAssembly.dll+190BCDB: CC                       - int 3 
GameAssembly.dll+190BCDC: CC                       - int 3 
GameAssembly.dll+190BCDD: CC                       - int 3 
GameAssembly.dll+190BCDE: CC                       - int 3 
GameAssembly.dll+190BCDF: CC                       - int 3 
Glowstick.SyncGrab: 48 83 EC 28              - sub rsp,28
GameAssembly.dll+190BCE4: 48 8B 49 18              - mov rcx,[rcx+18]
GameAssembly.dll+190BCE8: 84 D2                    - test dl,dl
GameAssembly.dll+190BCEA: 74 0A                    - je GameAssembly.dll+190BCF6
// ---------- INJECTING HERE ----------
GameAssembly.dll+190BCEC: F3 0F 10 0D 9C A9 79 00  - movss xmm1,[GameAssembly.dll+20A6690]
// ---------- DONE INJECTING  ----------
GameAssembly.dll+190BCF4: EB 08                    - jmp GameAssembly.dll+190BCFE
GameAssembly.dll+190BCF6: F3 0F 10 0D BA A9 79 00  - movss xmm1,[GameAssembly.dll+20A66B8]
GameAssembly.dll+190BCFE: 48 85 C9                 - test rcx,rcx
GameAssembly.dll+190BD01: 74 0C                    - je GameAssembly.dll+190BD0F
GameAssembly.dll+190BD03: 45 33 C0                 - xor r8d,r8d
GameAssembly.dll+190BD06: 48 83 C4 28              - add rsp,28
GameAssembly.dll+190BD0A: E9 F1 FB 05 FF           - jmp UnityEngine.Light.set_range
GameAssembly.dll+190BD0F: E8 BC 89 7C FE           - call GameAssembly.dll+D46D0
GameAssembly.dll+190BD14: CC                       - int 3 
GameAssembly.dll+190BD15: CC                       - int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>141</ID>
      <Description>"Super Glowstick (on ground)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Phasmophobia.exe
  Version: 
  Date   : 2020-11-04
  Author : C130s

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(glow2,GameAssembly.dll,F3 0F 10 0D BA A9 79 00) // should be unique
alloc(newmem,$1000,glow2)

label(code)
label(return)

newmem:
push ebx
mov ebx,(float)25.0
movd xmm1,ebx
pop ebx
jmp return

code:
  movss xmm1,[GameAssembly.dll+20A66B8]
  jmp return

glow2:
  jmp newmem
  nop 3
return:
registersymbol(glow2)

[DISABLE]

glow2:
  db F3 0F 10 0D BA A9 79 00

unregistersymbol(glow2)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: GameAssembly.dll+190BCF6

GameAssembly.dll+190BCDC: CC                       - int 3 
GameAssembly.dll+190BCDD: CC                       - int 3 
GameAssembly.dll+190BCDE: CC                       - int 3 
GameAssembly.dll+190BCDF: CC                       - int 3 
Glowstick.SyncGrab: 48 83 EC 28              - sub rsp,28
GameAssembly.dll+190BCE4: 48 8B 49 18              - mov rcx,[rcx+18]
GameAssembly.dll+190BCE8: 84 D2                    - test dl,dl
GameAssembly.dll+190BCEA: 74 0A                    - je GameAssembly.dll+190BCF6
GameAssembly.dll+190BCEC: F3 0F 10 0D 9C A9 79 00  - movss xmm1,[GameAssembly.dll+20A6690]
GameAssembly.dll+190BCF4: EB 08                    - jmp GameAssembly.dll+190BCFE
// ---------- INJECTING HERE ----------
GameAssembly.dll+190BCF6: F3 0F 10 0D BA A9 79 00  - movss xmm1,[GameAssembly.dll+20A66B8]
// ---------- DONE INJECTING  ----------
GameAssembly.dll+190BCFE: 48 85 C9                 - test rcx,rcx
GameAssembly.dll+190BD01: 74 0C                    - je GameAssembly.dll+190BD0F
GameAssembly.dll+190BD03: 45 33 C0                 - xor r8d,r8d
GameAssembly.dll+190BD06: 48 83 C4 28              - add rsp,28
GameAssembly.dll+190BD0A: E9 F1 FB 05 FF           - jmp UnityEngine.Light.set_range
GameAssembly.dll+190BD0F: E8 BC 89 7C FE           - call GameAssembly.dll+D46D0
GameAssembly.dll+190BD14: CC                       - int 3 
GameAssembly.dll+190BD15: CC                       - int 3 
GameAssembly.dll+190BD16: CC                       - int 3 
GameAssembly.dll+190BD17: CC                       - int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>160</ID>
      <Description>"Hunt Difficulty"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Phasmophobia.exe
  Version: 
  Date   : 2020-11-04
  Author : C130s

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(difficulty,GameAssembly.dll,B3 E0 FF 48 85 C0 74 22 89 70 1C 48 8B 4F 18) // should be unique
alloc(newmem,$1000,difficulty)
alloc(get_difficulty,10)

label(code)
label(return)

get_difficulty:
dd 0

newmem:

code:
  mov [rax+1C],esi
  mov [get_difficulty],rax
  mov rcx,[rdi+18]
  jmp return

difficulty+08:
  jmp newmem
  nop 2
return:
registersymbol(difficulty get_difficulty)

[DISABLE]

difficulty+08:
  db 89 70 1C 48 8B 4F 18

unregistersymbol(difficulty get_difficulty)
dealloc(newmem)
dealloc(get_difficulty)
{
// ORIGINAL CODE - INJECTION POINT: GameAssembly.dll+E6A1BC

GameAssembly.dll+E6A198: 48 8B C8              - mov rcx,rax
GameAssembly.dll+E6A19B: 48 8B D8              - mov rbx,rax
GameAssembly.dll+E6A19E: E8 5D C7 AF FF        - call UnityEngine.GameObject..ctor
GameAssembly.dll+E6A1A3: 48 85 DB              - test rbx,rbx
GameAssembly.dll+E6A1A6: 74 36                 - je GameAssembly.dll+E6A1DE
GameAssembly.dll+E6A1A8: 48 8B 15 41 89 AF 01  - mov rdx,[GameAssembly.dll+2962AF0]
GameAssembly.dll+E6A1AF: 48 8B CB              - mov rcx,rbx
GameAssembly.dll+E6A1B2: E8 79 B3 E0 FF        - call GameAssembly.dll+C75530
GameAssembly.dll+E6A1B7: 48 85 C0              - test rax,rax
GameAssembly.dll+E6A1BA: 74 22                 - je GameAssembly.dll+E6A1DE
// ---------- INJECTING HERE ----------
GameAssembly.dll+E6A1BC: 89 70 1C              - mov [rax+1C],esi
// ---------- DONE INJECTING  ----------
GameAssembly.dll+E6A1BF: 48 8B 4F 18           - mov rcx,[rdi+18]
GameAssembly.dll+E6A1C3: 48 85 C9              - test rcx,rcx
GameAssembly.dll+E6A1C6: 74 16                 - je GameAssembly.dll+E6A1DE
GameAssembly.dll+E6A1C8: 33 D2                 - xor edx,edx
GameAssembly.dll+E6A1CA: 48 8B 5C 24 30        - mov rbx,[rsp+30]
GameAssembly.dll+E6A1CF: 48 8B 74 24 38        - mov rsi,[rsp+38]
GameAssembly.dll+E6A1D4: 48 83 C4 20           - add rsp,20
GameAssembly.dll+E6A1D8: 5F                    - pop rdi
GameAssembly.dll+E6A1D9: E9 E2 41 29 00        - jmp ServerManager.UpdateUI
GameAssembly.dll+E6A1DE: E8 ED A4 26 FF        - call GameAssembly.dll+D46D0
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>161</ID>
          <Description>"2=P 1=I 0=A"</Description>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>get_difficulty</Address>
          <Offsets>
            <Offset>1c</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>156</ID>
      <Description>"Hunt Clock"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(second,GameAssembly.dll,F3 0F 10 37 33 C9 E8 21 BD)
aobscanmodule(minute,GameAssembly.dll,48 83 EC 20 8B 19 33 C9 E8 C1) // should be unique
alloc(newmem1,$1000,second)
alloc(newmem,$1000,minute)
alloc(get_minute,10)
alloc(get_second,10)

label(code)
label(return)
label(code1)
label(return1)
registersymbol(minute get_minute second get_second)

get_minute:
dd 0
get_second:
dd 0

newmem:
mov [get_minute],rcx
jmp code

code:
  sub rsp,20
  mov ebx,[rcx]
  jmp return

minute:
  jmp newmem
  nop
return:

/////////////////////////////////////////////////////
newmem1:
mov [get_second],rdi
jmp code1

code1:
  movss xmm6,[rdi]
  xor ecx,ecx
  jmp return1

second:
  jmp newmem1
  nop
return1:

[DISABLE]

second:
  db F3 0F 10 37 33 C9
minute:
  db 48 83 EC 20 8B 19

unregistersymbol(minute get_minute second get_second)
dealloc(newmem)
dealloc(get_minute)
dealloc(newmem1)
dealloc(get_second)

{
// ORIGINAL CODE - INJECTION POINT: GameAssembly.dll+62CE32

GameAssembly.dll+62CE13: 48 8B C8              - mov rcx,rax
GameAssembly.dll+62CE16: 48 8B F8              - mov rdi,rax
GameAssembly.dll+62CE19: E8 C2 06 00 00        - call System.InvalidCastException..ctor
GameAssembly.dll+62CE1E: 48 8B 15 9B 3C 31 02  - mov rdx,[GameAssembly.dll+2940AC0]
GameAssembly.dll+62CE25: 48 8B CF              - mov rcx,rdi
GameAssembly.dll+62CE28: E8 73 78 AA FF        - call GameAssembly.dll+D46A0
GameAssembly.dll+62CE2D: CC                    - int 3 
GameAssembly.dll+62CE2E: CC                    - int 3 
GameAssembly.dll+62CE2F: CC                    - int 3 
GameAssembly.dll+62CE30: 40 53                 - push rbx
// ---------- INJECTING HERE ----------
GameAssembly.dll+62CE32: 48 83 EC 20           - sub rsp,20
// ---------- DONE INJECTING  ----------
GameAssembly.dll+62CE36: 8B 19                 - mov ebx,[rcx]
GameAssembly.dll+62CE38: 33 C9                 - xor ecx,ecx
GameAssembly.dll+62CE3A: E8 C1 00 EB FF        - call System.Globalization.NumberFormatInfo.get_CurrentInfo
GameAssembly.dll+62CE3F: 45 33 C9              - xor r9d,r9d
GameAssembly.dll+62CE42: 4C 8B C0              - mov r8,rax
GameAssembly.dll+62CE45: 33 D2                 - xor edx,edx
GameAssembly.dll+62CE47: 8B CB                 - mov ecx,ebx
GameAssembly.dll+62CE49: 48 83 C4 20           - add rsp,20
GameAssembly.dll+62CE4D: 5B                    - pop rbx
GameAssembly.dll+62CE4E: E9 2D A1 05 00        - jmp System.Number.FormatInt32
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>157</ID>
          <Description>"Minutes"</Description>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>get_minute</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>159</ID>
          <Description>"Seconds"</Description>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>get_second</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Infinite Pictures"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(PICS,GameAssembly.dll,89 46 58 85 D2) // should be unique
alloc(newmem,$1000,"GameAssembly.dll"+BE05DD)

label(code)
label(return)

newmem:

code:
  mov eax,#9
  mov [rsi+58],eax
  test edx,edx
  jmp return

PICS:
  jmp newmem
return:
registersymbol(PICS)

[DISABLE]

PICS:
  db 89 46 58 85 D2

unregistersymbol(PICS)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "GameAssembly.dll"+BE05DD

"GameAssembly.dll"+BE05B5: 48 8B 4E 20           -  mov rcx,[rsi+20]
"GameAssembly.dll"+BE05B9: 48 85 C9              -  test rcx,rcx
"GameAssembly.dll"+BE05BC: 0F 84 3C 0A 00 00     -  je GameAssembly.dll+BE0FFE
"GameAssembly.dll"+BE05C2: 33 D2                 -  xor edx,edx
"GameAssembly.dll"+BE05C4: E8 27 87 AD FF        -  call GameAssembly.dll+6B8CF0
"GameAssembly.dll"+BE05C9: 8B 56 58              -  mov edx,[rsi+58]
"GameAssembly.dll"+BE05CC: 45 33 F6              -  xor r14d,r14d
"GameAssembly.dll"+BE05CF: 4C 8B 25 AA 69 C3 01  -  mov r12,[GameAssembly.dll+2816F80]
"GameAssembly.dll"+BE05D6: 44 89 75 30           -  mov [rbp+30],r14d
"GameAssembly.dll"+BE05DA: 8D 42 FF              -  lea eax,[rdx-01]
// ---------- INJECTING HERE ----------
"GameAssembly.dll"+BE05DD: 89 46 58              -  mov [rsi+58],eax
"GameAssembly.dll"+BE05E0: 85 D2                 -  test edx,edx
// ---------- DONE INJECTING  ----------
"GameAssembly.dll"+BE05E2: 7E 2F                 -  jle GameAssembly.dll+BE0613
"GameAssembly.dll"+BE05E4: 48 8B 5E 60           -  mov rbx,[rsi+60]
"GameAssembly.dll"+BE05E8: 48 8D 4E 58           -  lea rcx,[rsi+58]
"GameAssembly.dll"+BE05EC: 33 D2                 -  xor edx,edx
"GameAssembly.dll"+BE05EE: E8 AD C9 49 00        -  call GameAssembly.dll+107CFA0
"GameAssembly.dll"+BE05F3: 48 85 DB              -  test rbx,rbx
"GameAssembly.dll"+BE05F6: 0F 84 02 0A 00 00     -  je GameAssembly.dll+BE0FFE
"GameAssembly.dll"+BE05FC: 4C 8B 0B              -  mov r9,[rbx]
"GameAssembly.dll"+BE05FF: 48 8B D0              -  mov rdx,rax
"GameAssembly.dll"+BE0602: 48 8B CB              -  mov rcx,rbx
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>211</ID>
      <Description>"Fast Camera"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(fastcam,GameAssembly.dll,76 0B C6 43 54 01 C7 43 50 00 00 40) // should be unique
alloc(newmem,$1000,"GameAssembly.dll"+15C1084)

label(code)
label(return)

newmem:

code:
  //jna GameAssembly.dll+15E4871
  mov byte ptr [rbx+54],01
  jmp return

fastcam:
  jmp newmem
  nop
return:
registersymbol(fastcam)

[DISABLE]

fastcam:
  db 76 0B C6 43 54 01

unregistersymbol(fastcam)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "GameAssembly.dll"+15E4864

"GameAssembly.dll"+15E483D: 75 32                 -  jne GameAssembly.dll+15E4871
"GameAssembly.dll"+15E483F: 0F 29 74 24 20        -  movaps [rsp+20],xmm6
"GameAssembly.dll"+15E4844: F3 0F 10 71 50        -  movss xmm6,[rcx+50]
"GameAssembly.dll"+15E4849: 33 C9                 -  xor ecx,ecx
"GameAssembly.dll"+15E484B: E8 F0 BB 2F FF        -  call GameAssembly.dll+8E0440
"GameAssembly.dll"+15E4850: F3 0F 5C F0           -  subss xmm6,xmm0
"GameAssembly.dll"+15E4854: 0F 57 C0              -  xorps xmm0,xmm0
"GameAssembly.dll"+15E4857: F3 0F 11 73 50        -  movss [rbx+50],xmm6
"GameAssembly.dll"+15E485C: 0F 2F C6              -  comiss xmm0,xmm6
"GameAssembly.dll"+15E485F: 0F 28 74 24 20        -  movaps xmm6,[rsp+20]
// ---------- INJECTING HERE ----------
"GameAssembly.dll"+15E4864: 76 0B                 -  jna GameAssembly.dll+15E4871
"GameAssembly.dll"+15E4866: C6 43 54 01           -  mov byte ptr [rbx+54],01
// ---------- DONE INJECTING  ----------
"GameAssembly.dll"+15E486A: C7 43 50 00 00 40 40  -  mov [rbx+50],40400000
"GameAssembly.dll"+15E4871: 48 83 C4 30           -  add rsp,30
"GameAssembly.dll"+15E4875: 5B                    -  pop rbx
"GameAssembly.dll"+15E4876: C3                    -  ret 
"GameAssembly.dll"+15E4877: CC                    -  int 3 
"GameAssembly.dll"+15E4878: CC                    -  int 3 
"GameAssembly.dll"+15E4879: CC                    -  int 3 
"GameAssembly.dll"+15E487A: CC                    -  int 3 
"GameAssembly.dll"+15E487B: CC                    -  int 3 
"GameAssembly.dll"+15E487C: CC                    -  int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>31</ID>
      <Description>"Hoop Score Hook"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(HOOP,GameAssembly.dll,FF 47 18 48 8D 4F 18 48 8B 77 20 33 D2 E8 8A 41) // should be unique
alloc(newmem,$1000,HOOP)
alloc(find_score,10)

label(code)
label(return)

find_score:
dd 0

newmem:
mov [find_score],rdi
jmp code

code:
  inc [rdi+18]
  lea rcx,[rdi+18]
  jmp return

HOOP:
  jmp newmem
  nop 2
return:
registersymbol(HOOP find_score)

[DISABLE]

HOOP:
  db FF 47 18 48 8D 4F 18

unregistersymbol(HOOP find_score)
dealloc(newmem)
dealloc(find_score)
{
// ORIGINAL CODE - INJECTION POINT: GameAssembly.dll+15C8C94

GameAssembly.dll+15C8C6B: 48 8B 0D 0E 2B 36 01  - mov rcx,[GameAssembly.dll+292B780]
GameAssembly.dll+15C8C72: F6 81 2F 01 00 00 02  - test byte ptr [rcx+0000012F],02
GameAssembly.dll+15C8C79: 74 0E                 - je GameAssembly.dll+15C8C89
GameAssembly.dll+15C8C7B: 83 B9 E0 00 00 00 00  - cmp dword ptr [rcx+000000E0],00
GameAssembly.dll+15C8C82: 75 05                 - jne GameAssembly.dll+15C8C89
GameAssembly.dll+15C8C84: E8 77 28 A9 FE        - call GameAssembly.il2cpp_runtime_class_init
GameAssembly.dll+15C8C89: 33 C9                 - xor ecx,ecx
GameAssembly.dll+15C8C8B: E8 40 A1 FE FE        - call GameAssembly.dll+5B2DD0
GameAssembly.dll+15C8C90: 84 C0                 - test al,al
GameAssembly.dll+15C8C92: 75 59                 - jne GameAssembly.dll+15C8CED
// ---------- INJECTING HERE ----------
GameAssembly.dll+15C8C94: FF 47 18              - inc [rdi+18]
// ---------- DONE INJECTING  ----------
GameAssembly.dll+15C8C97: 48 8D 4F 18           - lea rcx,[rdi+18]
GameAssembly.dll+15C8C9B: 48 8B 77 20           - mov rsi,[rdi+20]
GameAssembly.dll+15C8C9F: 33 D2                 - xor edx,edx
GameAssembly.dll+15C8CA1: E8 8A 41 06 FF        - call GameAssembly.dll+62CE30
GameAssembly.dll+15C8CA6: 48 85 F6              - test rsi,rsi
GameAssembly.dll+15C8CA9: 74 52                 - je GameAssembly.dll+15C8CFD
GameAssembly.dll+15C8CAB: 4C 8B 0E              - mov r9,[rsi]
GameAssembly.dll+15C8CAE: 48 8B D0              - mov rdx,rax
GameAssembly.dll+15C8CB1: 48 8B CE              - mov rcx,rsi
GameAssembly.dll+15C8CB4: 4D 8B 81 C8 05 00 00  - mov r8,[r9+000005C8]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>32</ID>
          <Description>"Hoop Score"</Description>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>find_score</Address>
          <Offsets>
            <Offset>18</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>212</ID>
      <Description>"Hoop Score"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(score,GameAssembly.dll,FF 47 18 48 8D 4F 18 48 8B 77 20 33 D2 E8 8A 41) // should be unique
alloc(newmem,$1000,score)
alloc(get_score,10)

label(code)
label(return)

get_score:
dd 0

newmem:
mov [get_score],rdi
jmp code

code:
  inc [rdi+18]
  lea rcx,[rdi+18]
  jmp return

score:
  jmp newmem
  nop 2
return:
registersymbol(score get_score)

[DISABLE]

score:
  db FF 47 18 48 8D 4F 18

unregistersymbol(score get_score)
dealloc(newmem)
dealloc(get_score)
{
// ORIGINAL CODE - INJECTION POINT: GameAssembly.dll+15C8C94

GameAssembly.dll+15C8C6B: 48 8B 0D 0E 2B 36 01  - mov rcx,[GameAssembly.dll+292B780]
GameAssembly.dll+15C8C72: F6 81 2F 01 00 00 02  - test byte ptr [rcx+0000012F],02
GameAssembly.dll+15C8C79: 74 0E                 - je GameAssembly.dll+15C8C89
GameAssembly.dll+15C8C7B: 83 B9 E0 00 00 00 00  - cmp dword ptr [rcx+000000E0],00
GameAssembly.dll+15C8C82: 75 05                 - jne GameAssembly.dll+15C8C89
GameAssembly.dll+15C8C84: E8 77 28 A9 FE        - call GameAssembly.il2cpp_runtime_class_init
GameAssembly.dll+15C8C89: 33 C9                 - xor ecx,ecx
GameAssembly.dll+15C8C8B: E8 40 A1 FE FE        - call GameAssembly.dll+5B2DD0
GameAssembly.dll+15C8C90: 84 C0                 - test al,al
GameAssembly.dll+15C8C92: 75 59                 - jne GameAssembly.dll+15C8CED
// ---------- INJECTING HERE ----------
GameAssembly.dll+15C8C94: FF 47 18              - inc [rdi+18]
// ---------- DONE INJECTING  ----------
GameAssembly.dll+15C8C97: 48 8D 4F 18           - lea rcx,[rdi+18]
GameAssembly.dll+15C8C9B: 48 8B 77 20           - mov rsi,[rdi+20]
GameAssembly.dll+15C8C9F: 33 D2                 - xor edx,edx
GameAssembly.dll+15C8CA1: E8 8A 41 06 FF        - call GameAssembly.dll+62CE30
GameAssembly.dll+15C8CA6: 48 85 F6              - test rsi,rsi
GameAssembly.dll+15C8CA9: 74 52                 - je GameAssembly.dll+15C8CFD
GameAssembly.dll+15C8CAB: 4C 8B 0E              - mov r9,[rsi]
GameAssembly.dll+15C8CAE: 48 8B D0              - mov rdx,rax
GameAssembly.dll+15C8CB1: 48 8B CE              - mov rcx,rsi
GameAssembly.dll+15C8CB4: 4D 8B 81 C8 05 00 00  - mov r8,[r9+000005C8]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>213</ID>
          <Description>"Score Once to Populate Value"</Description>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>get_score</Address>
          <Offsets>
            <Offset>18</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Structures StructVersion="2">
    <Structure Name="stats" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
      <Elements>
        <Element Offset="0" Vartype="Pointer" Bytesize="8" OffsetHex="00000000" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000008" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16" Vartype="Pointer" Bytesize="8" OffsetHex="00000010" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000018" DisplayMethod="Signed Integer"/>
        <Element Offset="28" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="0000001C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="48" Vartype="Pointer" Bytesize="8" OffsetHex="00000030" DisplayMethod="Unsigned Integer"/>
        <Element Offset="56" Vartype="4 Bytes" Bytesize="4" RLECount="10" OffsetHex="00000038" DisplayMethod="Unsigned Integer"/>
        <Element Offset="96" Vartype="Pointer" Bytesize="8" OffsetHex="00000060" DisplayMethod="Unsigned Integer"/>
        <Element Offset="104" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000068" DisplayMethod="Unsigned Integer"/>
        <Element Offset="112" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000070" DisplayMethod="Unsigned Integer"/>
        <Element Offset="128" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000080" DisplayMethod="Unsigned Integer"/>
        <Element Offset="144" Vartype="Pointer" Bytesize="8" OffsetHex="00000090" DisplayMethod="Unsigned Integer"/>
        <Element Offset="152" Vartype="4 Bytes" Bytesize="4" RLECount="10" OffsetHex="00000098" DisplayMethod="Unsigned Integer"/>
        <Element Offset="192" Vartype="Pointer" Bytesize="8" OffsetHex="000000C0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="200" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000000C8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="208" Vartype="Pointer" Bytesize="8" OffsetHex="000000D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="216" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="000000D8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="240" Vartype="Pointer" Bytesize="8" OffsetHex="000000F0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="248" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000000F8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="256" Vartype="Pointer" Bytesize="8" OffsetHex="00000100" DisplayMethod="Unsigned Integer"/>
        <Element Offset="264" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000108" DisplayMethod="Unsigned Integer"/>
        <Element Offset="288" Vartype="Pointer" Bytesize="8" OffsetHex="00000120" DisplayMethod="Unsigned Integer"/>
        <Element Offset="296" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000128" DisplayMethod="Unsigned Integer"/>
        <Element Offset="304" Vartype="Pointer" Bytesize="8" OffsetHex="00000130" DisplayMethod="Unsigned Integer"/>
        <Element Offset="312" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000138" DisplayMethod="Unsigned Integer"/>
        <Element Offset="336" Vartype="Pointer" Bytesize="8" OffsetHex="00000150" DisplayMethod="Unsigned Integer"/>
        <Element Offset="344" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000158" DisplayMethod="Unsigned Integer"/>
        <Element Offset="352" Vartype="Pointer" Bytesize="8" OffsetHex="00000160" DisplayMethod="Unsigned Integer"/>
        <Element Offset="360" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000168" DisplayMethod="Unsigned Integer"/>
        <Element Offset="384" Vartype="Pointer" Bytesize="8" OffsetHex="00000180" DisplayMethod="Unsigned Integer"/>
        <Element Offset="392" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000188" DisplayMethod="Unsigned Integer"/>
        <Element Offset="400" Vartype="Pointer" Bytesize="8" OffsetHex="00000190" DisplayMethod="Unsigned Integer"/>
        <Element Offset="408" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000198" DisplayMethod="Unsigned Integer"/>
        <Element Offset="432" Vartype="Pointer" Bytesize="8" OffsetHex="000001B0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="440" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000001B8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="448" Vartype="Pointer" Bytesize="8" OffsetHex="000001C0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="456" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="000001C8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="480" Vartype="Pointer" Bytesize="8" OffsetHex="000001E0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="488" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000001E8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="496" Vartype="Pointer" Bytesize="8" OffsetHex="000001F0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="504" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="000001F8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="528" Vartype="Pointer" Bytesize="8" OffsetHex="00000210" DisplayMethod="Unsigned Integer"/>
        <Element Offset="536" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000218" DisplayMethod="Unsigned Integer"/>
        <Element Offset="544" Vartype="Pointer" Bytesize="8" OffsetHex="00000220" DisplayMethod="Unsigned Integer"/>
        <Element Offset="552" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000228" DisplayMethod="Unsigned Integer"/>
        <Element Offset="576" Vartype="Pointer" Bytesize="8" OffsetHex="00000240" DisplayMethod="Unsigned Integer"/>
        <Element Offset="584" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000248" DisplayMethod="Unsigned Integer"/>
        <Element Offset="592" Vartype="Pointer" Bytesize="8" OffsetHex="00000250" DisplayMethod="Unsigned Integer"/>
        <Element Offset="600" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000258" DisplayMethod="Unsigned Integer"/>
        <Element Offset="624" Vartype="Pointer" Bytesize="8" OffsetHex="00000270" DisplayMethod="Unsigned Integer"/>
        <Element Offset="632" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000278" DisplayMethod="Unsigned Integer"/>
        <Element Offset="640" Vartype="Pointer" Bytesize="8" OffsetHex="00000280" DisplayMethod="Unsigned Integer"/>
        <Element Offset="648" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000288" DisplayMethod="Unsigned Integer"/>
        <Element Offset="672" Vartype="Pointer" Bytesize="8" OffsetHex="000002A0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="680" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000002A8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="688" Vartype="Pointer" Bytesize="8" OffsetHex="000002B0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="696" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="000002B8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="720" Vartype="Pointer" Bytesize="8" OffsetHex="000002D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="728" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000002D8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="736" Vartype="Pointer" Bytesize="8" OffsetHex="000002E0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="744" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="000002E8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="768" Vartype="Pointer" Bytesize="8" OffsetHex="00000300" DisplayMethod="Unsigned Integer"/>
        <Element Offset="776" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000308" DisplayMethod="Unsigned Integer"/>
        <Element Offset="784" Vartype="Pointer" Bytesize="8" OffsetHex="00000310" DisplayMethod="Unsigned Integer"/>
        <Element Offset="792" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000318" DisplayMethod="Unsigned Integer"/>
        <Element Offset="816" Vartype="Pointer" Bytesize="8" OffsetHex="00000330" DisplayMethod="Unsigned Integer"/>
        <Element Offset="824" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000338" DisplayMethod="Unsigned Integer"/>
        <Element Offset="832" Vartype="Pointer" Bytesize="8" OffsetHex="00000340" DisplayMethod="Unsigned Integer"/>
        <Element Offset="840" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000348" DisplayMethod="Unsigned Integer"/>
        <Element Offset="864" Vartype="Pointer" Bytesize="8" OffsetHex="00000360" DisplayMethod="Unsigned Integer"/>
        <Element Offset="872" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000368" DisplayMethod="Unsigned Integer"/>
        <Element Offset="880" Vartype="Pointer" Bytesize="8" OffsetHex="00000370" DisplayMethod="Unsigned Integer"/>
        <Element Offset="888" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000378" DisplayMethod="Unsigned Integer"/>
        <Element Offset="912" Vartype="Pointer" Bytesize="8" OffsetHex="00000390" DisplayMethod="Unsigned Integer"/>
        <Element Offset="920" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000398" DisplayMethod="Unsigned Integer"/>
        <Element Offset="928" Vartype="Pointer" Bytesize="8" OffsetHex="000003A0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="936" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="000003A8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="960" Vartype="Pointer" Bytesize="8" OffsetHex="000003C0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="968" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000003C8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="976" Vartype="Pointer" Bytesize="8" OffsetHex="000003D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="984" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="000003D8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1008" Vartype="Pointer" Bytesize="8" OffsetHex="000003F0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1016" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000003F8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1024" Vartype="Pointer" Bytesize="8" OffsetHex="00000400" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1032" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000408" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1056" Vartype="Pointer" Bytesize="8" OffsetHex="00000420" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1064" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000428" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1072" Vartype="Pointer" Bytesize="8" OffsetHex="00000430" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1080" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000438" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1104" Vartype="Pointer" Bytesize="8" OffsetHex="00000450" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1112" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000458" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1120" Vartype="Pointer" Bytesize="8" OffsetHex="00000460" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1128" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000468" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1152" Vartype="Pointer" Bytesize="8" OffsetHex="00000480" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1160" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000488" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1168" Vartype="Pointer" Bytesize="8" OffsetHex="00000490" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1176" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000498" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1200" Vartype="Pointer" Bytesize="8" OffsetHex="000004B0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1208" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000004B8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1216" Vartype="Pointer" Bytesize="8" OffsetHex="000004C0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1224" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="000004C8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1248" Vartype="Pointer" Bytesize="8" OffsetHex="000004E0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1256" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000004E8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1264" Vartype="Pointer" Bytesize="8" OffsetHex="000004F0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1272" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="000004F8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1296" Vartype="Pointer" Bytesize="8" OffsetHex="00000510" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1304" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000518" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1312" Vartype="Pointer" Bytesize="8" OffsetHex="00000520" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1320" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000528" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1344" Vartype="Pointer" Bytesize="8" OffsetHex="00000540" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1352" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000548" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1360" Vartype="Pointer" Bytesize="8" OffsetHex="00000550" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1368" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000558" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1392" Vartype="Pointer" Bytesize="8" OffsetHex="00000570" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1400" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000578" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1408" Vartype="Pointer" Bytesize="8" OffsetHex="00000580" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1416" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000588" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1440" Vartype="Pointer" Bytesize="8" OffsetHex="000005A0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1448" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000005A8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1456" Vartype="Pointer" Bytesize="8" OffsetHex="000005B0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1464" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="000005B8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1488" Vartype="Pointer" Bytesize="8" OffsetHex="000005D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1496" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000005D8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1504" Vartype="Pointer" Bytesize="8" OffsetHex="000005E0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1512" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="000005E8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1536" Vartype="Pointer" Bytesize="8" OffsetHex="00000600" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1544" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000608" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1552" Vartype="Pointer" Bytesize="8" OffsetHex="00000610" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1560" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000618" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1584" Vartype="Pointer" Bytesize="8" OffsetHex="00000630" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1592" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000638" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1600" Vartype="Pointer" Bytesize="8" OffsetHex="00000640" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1608" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000648" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1632" Vartype="Pointer" Bytesize="8" OffsetHex="00000660" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1640" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000668" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1648" Vartype="Pointer" Bytesize="8" OffsetHex="00000670" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1656" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000678" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1680" Vartype="Pointer" Bytesize="8" OffsetHex="00000690" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1688" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000698" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1696" Vartype="Pointer" Bytesize="8" OffsetHex="000006A0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1704" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="000006A8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1728" Vartype="Pointer" Bytesize="8" OffsetHex="000006C0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1736" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000006C8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1744" Vartype="Pointer" Bytesize="8" OffsetHex="000006D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1752" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="000006D8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1776" Vartype="Pointer" Bytesize="8" OffsetHex="000006F0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1784" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000006F8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1792" Vartype="Pointer" Bytesize="8" OffsetHex="00000700" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1800" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000708" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1824" Vartype="Pointer" Bytesize="8" OffsetHex="00000720" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1832" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000728" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1840" Vartype="Pointer" Bytesize="8" OffsetHex="00000730" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1848" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000738" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1872" Vartype="Pointer" Bytesize="8" OffsetHex="00000750" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1880" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000758" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1888" Vartype="Pointer" Bytesize="8" OffsetHex="00000760" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1896" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000768" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1920" Vartype="Pointer" Bytesize="8" OffsetHex="00000780" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1928" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000788" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1936" Vartype="Pointer" Bytesize="8" OffsetHex="00000790" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1944" Vartype="4 Bytes" Bytesize="4" RLECount="10" OffsetHex="00000798" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1984" Vartype="Pointer" Bytesize="8" OffsetHex="000007C0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1992" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="000007C8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2008" Vartype="Pointer" Bytesize="8" OffsetHex="000007D8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2016" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000007E0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2024" Vartype="Pointer" Bytesize="8" OffsetHex="000007E8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2032" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="000007F0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2048" Vartype="Pointer" Bytesize="8" OffsetHex="00000800" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2056" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000808" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2064" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000810" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2080" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000820" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2088" Vartype="Pointer" Bytesize="8" OffsetHex="00000828" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2096" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000830" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2112" Vartype="Pointer" Bytesize="8" OffsetHex="00000840" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2120" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000848" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2128" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000850" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2144" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000860" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2152" Vartype="Pointer" Bytesize="8" OffsetHex="00000868" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2160" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000870" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2176" Vartype="Pointer" Bytesize="8" OffsetHex="00000880" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2184" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000888" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2192" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000890" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2208" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000008A0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2216" Vartype="Pointer" Bytesize="8" OffsetHex="000008A8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2224" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="000008B0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2240" Vartype="Pointer" Bytesize="8" OffsetHex="000008C0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2248" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000008C8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2256" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="000008D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2272" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000008E0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2280" Vartype="Pointer" Bytesize="8" OffsetHex="000008E8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2288" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="000008F0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2304" Vartype="Pointer" Bytesize="8" OffsetHex="00000900" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2312" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000908" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2320" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000910" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2336" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000920" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2344" Vartype="Pointer" Bytesize="8" OffsetHex="00000928" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2352" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000930" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2368" Vartype="Pointer" Bytesize="8" OffsetHex="00000940" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2376" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000948" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2384" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000950" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2400" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000960" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2408" Vartype="Pointer" Bytesize="8" OffsetHex="00000968" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2416" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000970" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2432" Vartype="Pointer" Bytesize="8" OffsetHex="00000980" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2440" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000988" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2448" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000990" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2464" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000009A0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2472" Vartype="Pointer" Bytesize="8" OffsetHex="000009A8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2480" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="000009B0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2496" Vartype="Pointer" Bytesize="8" OffsetHex="000009C0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2504" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="000009C8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2520" Vartype="Pointer" Bytesize="8" OffsetHex="000009D8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2528" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000009E0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2536" Vartype="Pointer" Bytesize="8" OffsetHex="000009E8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2544" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="000009F0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2560" Vartype="Pointer" Bytesize="8" OffsetHex="00000A00" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2568" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000A08" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2576" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000A10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2592" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000A20" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2600" Vartype="Pointer" Bytesize="8" OffsetHex="00000A28" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2608" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000A30" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2624" Vartype="Pointer" Bytesize="8" OffsetHex="00000A40" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2632" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000A48" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2648" Vartype="Pointer" Bytesize="8" OffsetHex="00000A58" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2656" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000A60" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2664" Vartype="Pointer" Bytesize="8" OffsetHex="00000A68" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2672" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000A70" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2688" Vartype="Pointer" Bytesize="8" OffsetHex="00000A80" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2696" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000A88" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2704" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000A90" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2720" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000AA0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2728" Vartype="Pointer" Bytesize="8" OffsetHex="00000AA8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2736" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000AB0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2752" Vartype="Pointer" Bytesize="8" OffsetHex="00000AC0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2760" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000AC8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2776" Vartype="Pointer" Bytesize="8" OffsetHex="00000AD8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2784" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000AE0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2792" Vartype="Pointer" Bytesize="8" OffsetHex="00000AE8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2800" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000AF0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2816" Vartype="Pointer" Bytesize="8" OffsetHex="00000B00" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2824" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000B08" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2832" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000B10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2848" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000B20" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2856" Vartype="Pointer" Bytesize="8" OffsetHex="00000B28" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2864" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000B30" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2880" Vartype="Pointer" Bytesize="8" OffsetHex="00000B40" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2888" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000B48" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2896" Vartype="Pointer" Bytesize="8" OffsetHex="00000B50" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2904" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000B58" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2912" Vartype="Pointer" Bytesize="8" OffsetHex="00000B60" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2920" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000B68" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2928" Vartype="Float" Bytesize="4" OffsetHex="00000B70" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2932" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000B74" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2944" Vartype="Pointer" Bytesize="8" OffsetHex="00000B80" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2952" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000B88" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2960" Vartype="Pointer" Bytesize="8" OffsetHex="00000B90" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2968" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000B98" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2992" Vartype="Pointer" Bytesize="8" OffsetHex="00000BB0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3000" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000BB8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3008" Vartype="Pointer" Bytesize="8" OffsetHex="00000BC0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3016" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000BC8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3024" Vartype="Pointer" Bytesize="8" OffsetHex="00000BD0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3032" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000BD8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3040" Vartype="Pointer" Bytesize="8" OffsetHex="00000BE0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3048" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000BE8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3056" Vartype="Float" Bytesize="4" OffsetHex="00000BF0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3060" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000BF4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3072" Vartype="Pointer" Bytesize="8" OffsetHex="00000C00" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3080" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000C08" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3096" Vartype="Pointer" Bytesize="8" OffsetHex="00000C18" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3104" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000C20" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3112" Vartype="Pointer" Bytesize="8" OffsetHex="00000C28" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3120" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000C30" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3136" Vartype="Pointer" Bytesize="8" OffsetHex="00000C40" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3144" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000C48" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3152" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000C50" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3168" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000C60" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3176" Vartype="Pointer" Bytesize="8" OffsetHex="00000C68" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3184" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000C70" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3200" Vartype="Pointer" Bytesize="8" OffsetHex="00000C80" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3208" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000C88" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3216" Vartype="Pointer" Bytesize="8" OffsetHex="00000C90" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3224" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000C98" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3248" Vartype="Pointer" Bytesize="8" OffsetHex="00000CB0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3256" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000CB8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3264" Vartype="Pointer" Bytesize="8" OffsetHex="00000CC0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3272" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000CC8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3280" Vartype="Pointer" Bytesize="8" OffsetHex="00000CD0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3288" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000CD8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3296" Vartype="Pointer" Bytesize="8" OffsetHex="00000CE0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3304" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000CE8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3312" Vartype="Float" Bytesize="4" OffsetHex="00000CF0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3316" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000CF4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3328" Vartype="Pointer" Bytesize="8" OffsetHex="00000D00" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3336" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000D08" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3344" Vartype="Pointer" Bytesize="8" OffsetHex="00000D10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3352" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000D18" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3376" Vartype="Pointer" Bytesize="8" OffsetHex="00000D30" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3384" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000D38" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3392" Vartype="Pointer" Bytesize="8" OffsetHex="00000D40" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3400" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000D48" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3408" Vartype="Pointer" Bytesize="8" OffsetHex="00000D50" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3416" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000D58" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3424" Vartype="Pointer" Bytesize="8" OffsetHex="00000D60" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3432" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000D68" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3440" Vartype="Float" Bytesize="4" OffsetHex="00000D70" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3444" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000D74" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3456" Vartype="Pointer" Bytesize="8" OffsetHex="00000D80" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3464" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000D88" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3472" Vartype="Pointer" Bytesize="8" OffsetHex="00000D90" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3480" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000D98" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3504" Vartype="Pointer" Bytesize="8" OffsetHex="00000DB0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3512" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000DB8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3520" Vartype="Pointer" Bytesize="8" OffsetHex="00000DC0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3528" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000DC8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3536" Vartype="Pointer" Bytesize="8" OffsetHex="00000DD0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3544" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000DD8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3552" Vartype="Pointer" Bytesize="8" OffsetHex="00000DE0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3560" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000DE8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3568" Vartype="Float" Bytesize="4" OffsetHex="00000DF0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3572" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000DF4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3584" Vartype="Pointer" Bytesize="8" OffsetHex="00000E00" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3592" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000E08" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3600" Vartype="Pointer" Bytesize="8" OffsetHex="00000E10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3608" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000E18" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3632" Vartype="Pointer" Bytesize="8" OffsetHex="00000E30" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3640" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000E38" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3648" Vartype="Pointer" Bytesize="8" OffsetHex="00000E40" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3656" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000E48" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3664" Vartype="Pointer" Bytesize="8" OffsetHex="00000E50" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3672" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000E58" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3680" Vartype="Pointer" Bytesize="8" OffsetHex="00000E60" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3688" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000E68" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3696" Vartype="Float" Bytesize="4" OffsetHex="00000E70" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3700" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000E74" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3712" Vartype="Pointer" Bytesize="8" OffsetHex="00000E80" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3720" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000E88" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3728" Vartype="Pointer" Bytesize="8" OffsetHex="00000E90" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3736" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000E98" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3760" Vartype="Pointer" Bytesize="8" OffsetHex="00000EB0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3768" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000EB8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3776" Vartype="Pointer" Bytesize="8" OffsetHex="00000EC0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3784" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000EC8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3792" Vartype="Pointer" Bytesize="8" OffsetHex="00000ED0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3800" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000ED8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3808" Vartype="Pointer" Bytesize="8" OffsetHex="00000EE0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3816" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000EE8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3824" Vartype="Float" Bytesize="4" OffsetHex="00000EF0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3828" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000EF4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3840" Vartype="Pointer" Bytesize="8" OffsetHex="00000F00" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3848" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000F08" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3856" Vartype="Pointer" Bytesize="8" OffsetHex="00000F10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3864" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000F18" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3888" Vartype="Pointer" Bytesize="8" OffsetHex="00000F30" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3896" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000F38" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3904" Vartype="Pointer" Bytesize="8" OffsetHex="00000F40" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3912" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000F48" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3920" Vartype="Pointer" Bytesize="8" OffsetHex="00000F50" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3928" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000F58" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3936" Vartype="Pointer" Bytesize="8" OffsetHex="00000F60" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3944" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000F68" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3952" Vartype="Float" Bytesize="4" OffsetHex="00000F70" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3956" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000F74" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3968" Vartype="Pointer" Bytesize="8" OffsetHex="00000F80" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3976" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000F88" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3984" Vartype="Pointer" Bytesize="8" OffsetHex="00000F90" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3992" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000F98" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4016" Vartype="Pointer" Bytesize="8" OffsetHex="00000FB0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4024" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000FB8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4032" Vartype="Pointer" Bytesize="8" OffsetHex="00000FC0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4040" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000FC8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4048" Vartype="Pointer" Bytesize="8" OffsetHex="00000FD0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4056" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000FD8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4064" Vartype="Pointer" Bytesize="8" OffsetHex="00000FE0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4072" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000FE8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4080" Vartype="Float" Bytesize="4" OffsetHex="00000FF0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4084" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000FF4" DisplayMethod="Unsigned Integer"/>
      </Elements>
    </Structure>
  </Structures>
</CheatTable>
